{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitlesSection.js","sections/AboutSection.js","components/SkillCard.js","components/UpIcon.js","sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","children","react_default","a","createElement","className","concat","style","background","Component","DownIcon","display","flexDirection","alignItems","justifyContent","position","right","left","bottom","maxWidth","src","icon","TitlesSection","color","changeColor","bind","assertThisInitialized","setState","modules","name","src_components_Fullpage","onMouseOver","onMouseLeave","data","title","subtitle","keys","links","map","key","react_social_icons","url","activeClass","to","spy","smooth","offset","duration","delay","components_DownIcon","icons","down","AboutSection","sections","items","p","content","SkillCard","skill","image","UpIcon","transform","SkillSection","eachskill","src_components_SkillCard","components_UpIcon","App","background_01","background_02","background_03","onClick","src_sections_TitlesSection","src_sections_AboutSection","src_sections_SkillSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6fceb54b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./Fullpage.css\"\r\n\r\nclass Fullpage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render(){\r\n        const { children } = this.props\r\n        return(\r\n            <div \r\n                className={`fullpage ${this.props.className || ''}`}\r\n                style={{ background:this.props.background  }}\r\n            >\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fullpage","import React, {Component} from 'react';\r\n\r\nconst DownIcon = (props) =>{\r\n    return(\r\n        <div \r\n            style = {{\r\n            display:\"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems:\"center\",\r\n            justifyContent:\"center\",\r\n            position: \"absolute\",\r\n            right: \"0\",\r\n            left: \"0\",\r\n            bottom: \"70px\"\r\n            // marginBottom:\"-35px\",\r\n            // transform:\"translateY(-80px)\"\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                maxWidth: '30px',\r\n                }}  \r\n            >\r\n                <img src={props.icon} \r\n                    style={{\r\n                    maxWidth: '30px',\r\n                    }} \r\n                />\r\n            </div>\r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default DownIcon;","import React, {Component} from 'react';\r\nimport data from '../data.json';\r\nimport Fullpage from '../components/Fullpage';\r\nimport DownIcon from '../components/DownIcon';\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport './TitlesSection.css';\r\nimport { Link, Element } from 'react-scroll';\r\n\r\n\r\nclass TitlesSection extends Component{\r\n    constructor(){\r\n      super()\r\n      this.state ={\r\n        color:'#fff'\r\n      }\r\n      this.changeColor = this.changeColor.bind(this)  \r\n    }\r\n    \r\n    changeColor() {\r\n      this.setState({\r\n        color: this.state.color === \"#fff\" ? 'yellow' :'#fff'\r\n      })\r\n    }\r\n\r\n    render(){\r\n      return(\r\n        <div className=\"section\">\r\n            <Element name=\"title\" className=\"element\"></Element>  \r\n            <Fullpage className=\"first\"  background={this.props.background}>           \r\n              <h1 className=\"title\"\r\n                style={\r\n                  {color:this.state.color}\r\n                }\r\n                onMouseOver = {this.changeColor}\r\n                onMouseLeave ={this.changeColor}\r\n              >\r\n                {data.title}\r\n              </h1>\r\n              <h2>\r\n                {data.subtitle}\r\n              </h2>\r\n              <div>\r\n                {\r\n                  Object.keys(data.links).map(key =>{\r\n                    return(\r\n                      <SocialIcon url={data.links[key]} />\r\n                    )\r\n                  })\r\n                }\r\n              </div>             \r\n            </Fullpage>\r\n            <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={50} duration={500} delay={100}>         \r\n              <DownIcon icon={data.icons.down} />\r\n            </Link>\r\n            <Element name=\"about\" className=\"element\">\r\n            </Element>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TitlesSection;","import React, {Component} from 'react';\r\nimport Fullpage from '../components/Fullpage';\r\nimport DownIcon from '../components/DownIcon';\r\nimport { Link, Element } from 'react-scroll';\r\nimport data from '../data.json';\r\nimport './AboutSection.css'\r\n\r\nclass AboutSection extends Component{\r\n    render(){\r\n        return(\r\n          <div className=\"section\">\r\n            <Fullpage className=\"second\" background={this.props.background}>\r\n              <h3>\r\n                {data.sections[0].title}\r\n              </h3>\r\n              <div className=\"paragraphs\">\r\n                {data.sections[0].items.map(p =>{\r\n                  return <p>{p.content}</p>;\r\n                })}\r\n              </div>\r\n            </Fullpage>\r\n            <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} offset={50} duration={500} delay={100}>         \r\n              <DownIcon \r\n                icon={data.icons.down}\r\n              />\r\n            </Link>\r\n            <Element name=\"skills\" className=\"element\"> </Element>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutSection","import React, {Component} from 'react';\r\nimport \"./SkillCard.css\"\r\n\r\nclass SkillCard extends Component{\r\n    render(){\r\n        const {skill} = this.props\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"image-wrapper\">\r\n                    <img src={skill.content.image} />\r\n                </div>\r\n                <div className=\"skill-title-wrapper\">\r\n                    <h4>\r\n                    {skill.content.title}\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillCard","import React, {Component} from 'react';\r\n\r\nconst UpIcon = (props) =>{\r\n    return(\r\n        <div \r\n            style = {{\r\n            display:\"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems:\"center\",\r\n            justifyContent:\"center\",\r\n            position: \"absolute\",\r\n            right: \"0\",\r\n            left: \"0\",\r\n            bottom: \"70px\"\r\n            // marginBottom:\"-35px\",\r\n            // transform:\"translateY(-80px)\"\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                maxWidth: '30px',\r\n                }}  \r\n            >\r\n                <img src={props.icon} \r\n                    style={{\r\n                    maxWidth: '30px',\r\n                    transform: 'rotate(180deg)'\r\n                    }} \r\n                />\r\n            </div>\r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default UpIcon;","import React, {Component} from 'react';\r\nimport data from '../data.json';\r\nimport Fullpage from '../components/Fullpage';\r\nimport SkillCard from '../components/SkillCard';\r\nimport UpIcon from '../components/UpIcon';\r\nimport { Link, Element } from 'react-scroll';\r\nimport './SkillSection.css';\r\n\r\nclass SkillSection extends Component{\r\n    render(){\r\n        return(\r\n          <div className=\"section\">\r\n          <Fullpage className=\"third\"  background={this.props.background}>\r\n            <h3>\r\n              {data.sections[1].title}\r\n            </h3>\r\n            <div className=\"card-wrapper\">\r\n              {data.sections[1].items.map(eachskill =>{\r\n                return(\r\n                  <SkillCard skill = {eachskill} />\r\n                );                \r\n              })}              \r\n            </div>\r\n          </Fullpage>\r\n            <Link activeClass=\"active\" to=\"title\" spy={true} smooth={true} offset={50} duration={500} delay={100}>         \r\n              <UpIcon icon={data.icons.down} />\r\n            </Link>              \r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillSection","import React, { Component } from 'react';\n\nimport TitlesSection from './sections/TitlesSection'\nimport AboutSection from './sections/AboutSection'\nimport SkillSection from './sections/SkillSection'\n\nimport { Link, Element } from 'react-scroll';\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      background_01: \"#00a0af\",\n      background_02: \"#3fb9c4\",\n      background_03: \"#a5dfe4\"\n    };\n    this.changeColor = this.changeColor.bind(this)  \n  }\n  changeColor() {\n    this.setState({\n      background_01: this.state.background_01 === \"#00a0af\" ? '#ff7800' :'#00a0af',\n      background_02: this.state.background_02 === \"#3fb9c4\" ? '#ff9a40' :'#3fb9c4',\n      background_03: this.state.background_03 === \"#a5dfe4\" ? '#ffb573' :'#a5dfe4'\n    })\n  }\n\n  render() {    \n    return (\n     <div className=\"App\">\n\n          <div className=\"navigation\">\n              <div className=\"setting\">              \n                <div onClick={this.changeColor}>\n                  Theme Color\n                </div>\n              </div> \n              <div className=\"nav\">\n                <Link activeClass=\"active\" to=\"title\" spy={true} smooth={true} offset={50} duration={500} delay={100}>         \n                  Title\n                </Link>\n                <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={50} duration={500} delay={100}>         \n                  About\n                </Link>\n                <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} offset={50} duration={500} delay={100}>         \n                  Skills\n                </Link> \n              </div>                           \n          </div>\n          <TitlesSection \n            color={this.state.color}\n            background={this.state.background_01}\n          />\n          <AboutSection\n            color={this.state.color}\n            background={this.state.background_02}\n          />\n          <SkillSection\n            color={this.state.color}\n            background={this.state.background_03}\n          />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}